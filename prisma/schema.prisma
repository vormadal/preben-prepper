// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  defaultHomeId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Home relationships
  ownedHomes   Home[]       @relation("HomeOwner")
  homeAccesses HomeAccess[]
  defaultHome  Home?        @relation("DefaultHome", fields: [defaultHomeId], references: [id])

  @@map("users")
}

model Home {
  id             Int      @id @default(autoincrement())
  name           String
  numberOfAdults Int      @default(2)
  numberOfChildren Int    @default(0)
  numberOfPets   Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Relationships
  ownerId        Int
  owner          User           @relation("HomeOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  homeAccesses   HomeAccess[]
  inventoryItems InventoryItem[]
  defaultForUsers User[]        @relation("DefaultHome")

  @@map("homes")
}

model HomeAccess {
  id     Int  @id @default(autoincrement())
  userId Int
  homeId Int
  role   HomeRole @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  home   Home @relation(fields: [homeId], references: [id], onDelete: Cascade)
  
  @@unique([userId, homeId])
  @@map("home_accesses")
}

enum HomeRole {
  ADMIN
  MEMBER
}

model InventoryItem {
  id             Int      @id @default(autoincrement())
  name           String
  quantity       Int
  expirationDate DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Home relationship
  homeId         Int
  home           Home     @relation(fields: [homeId], references: [id], onDelete: Cascade)

  @@map("inventory_items")
}

model RecommendedInventoryItem {
  id          Int      @id @default(autoincrement())
  name        String
  expiresIn   Int      // Number of days until expiration
  quantity    Int
  isOptional  Boolean  @default(false)
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("recommended_inventory_items")
}
